import java.util.regex.Pattern


apply plugin: 'signing'
apply plugin: 'maven-publish'
//task generateSourcesJar(type:Jar){
//    from android.sourceSets.main.java.srcDirs
//    classifier "sources"
//}
afterEvaluate {
    println("isLocalRepository=" + isLocalRepository)
    println("getRepositoryUrl()=" + RELEASE_URL)
    println("NAME()=" + NAME)
    println("PASSWORD()=" + PASSWORD)
    publishing {
        publications {
            release(MavenPublication) {
                from components.java
                groupId = GROUP
                artifactId = ARTIFACT_ID
                version = VERSION
                // 必须有这个 否则不会上传AAR包
                //com.android.library
                // afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
                // 多渠道，可以自行指定aar路径
                // def projectName = project.getName()
                // artifact "build/outputs/aar/${projectName}-release.aar"
                // 上传source，这样使用方可以看到方法注释

//                artifact generateSourcesJar
                //依赖关系
//                pom.withXml{
//                    def dependenciesNode = asNode().appendNode("dependencies")
//                    configurations.implementation.allDependencies.forEach(){
//                        Dependency dependency ->
//                            if (dependency.version != "unspecified" && dependency.name != "unspecified"){
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', dependency.group)
//                                dependencyNode.appendNode('artifactId', dependency.name)
//                                dependencyNode.appendNode('version', dependency.version)
//                            }
//                    }
//                }
            }
//
        }

        repositories {
            maven {
                allowInsecureProtocol = (isLocalRepository == "1")
                name = "lidongjun"
                if (isLocalRepository == "1") {
                    url = uri("${System.env.HOME}/.m2/repository")
                } else {
                    url = RELEASE_URL

                }

                credentials {
                    username = NAME
                    password = PASSWORD
                }
            }
        }
    }
}






